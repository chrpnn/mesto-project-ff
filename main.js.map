{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/components/modal.js","webpack:///./src/components/api.js","webpack:///./src/components/card.js","webpack:///./src/components/validation.js","webpack:///./src/index.js"],"sourcesContent":["// открытие попапа\r\nexport function openPopup(popupElement) {\r\n  popupElement.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", closeByEsc);\r\n  document.addEventListener(\"click\", closeByClickOverlay);\r\n}\r\n\r\n// закрытие попапа\r\nexport function closePopup(popupElement) {\r\n  popupElement.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", closeByEsc);\r\n  document.removeEventListener(\"click\", closeByClickOverlay);\r\n}\r\n\r\n// закрытие попапа по esc\r\nconst closeByEsc = (evt) => {\r\n  if (evt.key === \"Escape\") {\r\n    const openedPopup = document.querySelector(\".popup_is-opened\");\r\n    closePopup(openedPopup);\r\n    }\r\n};\r\n\r\n// закрытие попапа по оверлею\r\nconst closeByClickOverlay = (evt) => {\r\n  if (evt.target.classList.contains(\"popup\")) {\r\n    closePopup(evt.target);\r\n  }\r\n};","export {\r\n    getUserInfo,\r\n    getCards,\r\n    updateUserProfile,\r\n    addNewCard,\r\n    deleteCardFromServer,\r\n    toggleLike,\r\n    updateUserAvatar,\r\n};\r\n\r\nconst config = {\r\n    baseUrl: \"https://nomoreparties.co/v1/wff-cohort-8\",\r\n    headers: {\r\n        authorization: \"18d55e3c-466f-4dfc-9dfd-6044169d9965\",\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n};\r\n\r\nconst fetchData = (url) => {\r\n    return fetch(url, {\r\n        headers: config.headers,\r\n    })\r\n        .then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                return Promise.reject(response.status);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n};\r\n\r\nconst getUserInfo = () => {\r\n    return fetchData(`${config.baseUrl}/users/me`);\r\n};\r\n\r\nconst getCards = () => {\r\n    return fetchData(`${config.baseUrl}/cards`);\r\n};\r\n\r\nconst updateUserProfile = (updatedData) => {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method: \"PATCH\",\r\n        headers: config.headers,\r\n        body: JSON.stringify(updatedData),\r\n    })\r\n        .then((response) => {\r\n            if (response.ok) {\r\n                console.log(response);\r\n                return response.json();\r\n            } else {\r\n                return Promise.reject(response.status);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n};\r\n\r\nconst addNewCard = (name, link) => {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: \"POST\",\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name,\r\n            link,\r\n        }),\r\n    })\r\n        .then((response) => {\r\n            if (response.ok) {\r\n                console.log(response);\r\n                return response.json();\r\n            } else {\r\n                return Promise.reject(response.status);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n};\r\n\r\nconst deleteCardFromServer = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n        method: \"DELETE\",\r\n        headers: config.headers,\r\n    })\r\n        .then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                return Promise.reject(response.status);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n};\r\n\r\nfunction toggleLike(cardId, isLiked) {\r\n    const method = isLiked ? \"DELETE\" : \"PUT\";\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: method,\r\n        headers: config.headers,\r\n    })\r\n        .then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                return Promise.reject(response.status);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nfunction updateUserAvatar(url) {\r\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n        method: \"PATCH\",\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            avatar: url,\r\n        }),\r\n    })\r\n        .then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                return Promise.reject(response.status);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n}\r\n","import { deleteCardFromServer, toggleLike } from \"./api\";\r\n\r\n// поиск шаблона карточки\r\nfunction getTemplate() {\r\n  const cardTemplate = document.getElementById(\"card-template\").content;\r\n  return cardTemplate.querySelector(\".places__item\");\r\n}\r\n\r\nexport function createCard(cardData, deleteCard, openImage, likeCard, isOwner) {\r\n  const card = getTemplate().cloneNode(true);\r\n  const cardImage = card.querySelector(\".card__image\");\r\n\r\n  // заполняем данные из массива\r\n  card.querySelector(\".card__title\").textContent = cardData.name;\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n\r\n  ///////////////////////////////////////////////////////////\r\n  // устанавливаем количество лайков\r\n  const likeCount = cardData.likes.length;\r\n  const likeCountElement = card.querySelector(\".card__like-count\");\r\n  likeCountElement.textContent = likeCount;\r\n  // console.log(likeCount)\r\n  //////////////////////////////////////////////////////////\r\n  // если пользователь является владельцем карточки, добавляем иконку удаления\r\n  if (isOwner) {\r\n    const deleteButton = card.querySelector(\".card__delete-button\");\r\n    deleteButton.addEventListener(\"click\", () => {\r\n      deleteCardFromServer(cardData._id)\r\n        .then(() => {\r\n          deleteCard(card);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    });\r\n  } else {\r\n    // если пользователь не является владельцем карточки, скрываем иконку удаления\r\n    const deleteButton = card.querySelector(\".card__delete-button\");\r\n    deleteButton.style.display = \"none\";\r\n  }\r\n  ///////////////////////////////////////////////////////\r\n  // обработчик для лайка\r\n  const likeButton = card.querySelector(\".card__like-button\");\r\n  likeButton.addEventListener(\"click\", () => {\r\n    // likeCard(likeButton);\r\n    const isLiked = likeButton.classList.contains(\r\n      \"card__like-button_is-active\"\r\n    );\r\n    toggleLike(cardData._id, isLiked)\r\n      .then((updatedCardData) => {\r\n        // console.log(cardData)\r\n        console.log(updatedCardData.likes);\r\n        // обновляем количество лайков и состояние кнопки лайка\r\n        updateLikeCount(card, updatedCardData.likes.length);\r\n        updateLikeButtonState(likeButton, isLiked);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Ошибка при изменении состояния лайка:\", error);\r\n      });\r\n  });\r\n  // обработчик для открытия изображения\r\n  cardImage.addEventListener(\"click\", () => {\r\n    openImage(cardData);\r\n  });\r\n\r\n  return card;\r\n}\r\n\r\n// функция для обновления количества лайков на карточке\r\nfunction updateLikeCount(card, likeCount) {\r\n  const likeCountElement = card.querySelector(\".card__like-count\");\r\n  likeCountElement.textContent = likeCount;\r\n}\r\n// функция для обновления состояния кнопки лайка (активный/неактивный)\r\nfunction updateLikeButtonState(button, isLiked) {\r\n  if (!isLiked) {\r\n    button.classList.add(\"card__like-button_is-active\");\r\n  } else {\r\n    button.classList.remove(\"card__like-button_is-active\");\r\n  }\r\n}\r\n\r\nexport function deleteCard(card) {\r\n  card.remove();\r\n}\r\n\r\nexport function likeCard(likeButton) {\r\n  likeButton.classList.toggle(\"card__like-button_is-active\");\r\n}\r\n","export { enableValidation, clearValidation };\r\n\r\nconst hideInputError = (\r\n  errorElement,\r\n  inputElement,\r\n  errorActiveClass,\r\n  inputErrorClass\r\n) => {\r\n  errorElement.textContent = \"\";\r\n  inputElement.classList.remove(inputErrorClass);\r\n  errorElement.classList.remove(errorActiveClass);\r\n};\r\n\r\n// 4\r\nconst showInputError = (\r\n  errorElement,\r\n  inputElement,\r\n  errorActiveClass,\r\n  inputErrorClass\r\n) => {\r\n  errorElement.textContent = inputElement.validationMessage;\r\n  inputElement.classList.add(inputErrorClass);\r\n  errorElement.classList.add(errorActiveClass);\r\n};\r\n\r\n// 3\r\nconst checkInputValidity = (\r\n  formElement,\r\n  inputElement,\r\n  errorActiveClass,\r\n  inputErrorClass\r\n) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  if (!inputElement.validity.valid) {\r\n    //функция отображения сообщения об ошибке\r\n    showInputError(\r\n      errorElement,\r\n      inputElement,\r\n      errorActiveClass,\r\n      inputErrorClass\r\n    );\r\n  } else {\r\n    hideInputError(\r\n      errorElement,\r\n      inputElement,\r\n      errorActiveClass,\r\n      inputErrorClass\r\n    );\r\n  }\r\n};\r\n\r\n// 2\r\nconst setEvtListeners = (formElement, settingObj) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(settingObj.inputSelector)\r\n  );\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", () => {\r\n      checkInputValidity(\r\n        formElement,\r\n        inputElement,\r\n        settingObj.errorActiveClass,\r\n        settingObj.inputErrorClass\r\n      );\r\n\r\n      const submitButton = formElement.querySelector(\r\n        settingObj.submitButtonSelector\r\n      );\r\n      toggleButtonState(\r\n        inputList,\r\n        submitButton,\r\n        settingObj.inactiveButtonClass\r\n      );\r\n    });\r\n  });\r\n};\r\n\r\n// 1\r\nconst enableValidation = (settingObj) => {\r\n  const formList = Array.from(\r\n    document.querySelectorAll(settingObj.formSelector)\r\n  );\r\n  formList.forEach((formElement) => {\r\n    setEvtListeners(formElement, settingObj);\r\n  });\r\n};\r\n\r\n// 1-1\r\nconst clearValidation = (formElement, settingObj) => {\r\n  // Находим все элементы с классом, указанным в настройках валидации\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(settingObj.inputSelector)\r\n  );\r\n  // Удаляем сообщения об ошибках и убираем классы ошибок у всех соответствующих элементов\r\n  inputList.forEach((inputElement) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n    hideInputError(\r\n      errorElement,\r\n      inputElement,\r\n      settingObj.errorActiveClass,\r\n      settingObj.inputErrorClass\r\n    );\r\n  });\r\n\r\n  // Находим кнопку отправки формы и делаем её неактивной\r\n  const submitButton = formElement.querySelector(\r\n    settingObj.submitButtonSelector\r\n  );\r\n\r\n  toggleButtonState(inputList, submitButton, settingObj.inactiveButtonClass);\r\n};\r\n\r\n// togglebutton\r\nconst toggleButtonState = (inputList, buttonElement, inactiveButtonClass) => {\r\n  // Если есть хотя бы один невалидный инпут\r\n  if (hasInvalidInput(inputList)) {\r\n    // сделай кнопку неактивной\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(inactiveButtonClass);\r\n  } else {\r\n    // иначе сделай кнопку активной\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(inactiveButtonClass);\r\n  }\r\n};\r\n\r\nfunction hasInvalidInput(inputList) {\r\n  return (\r\n    inputList.some((inputElement) => !inputElement.validity.valid) ||\r\n    inputList.some((inputElement) => inputElement.value === \"\")\r\n  );\r\n}\r\n","import \"./pages/index.css\";\r\nimport { openPopup, closePopup } from \"./components/modal.js\";\r\nimport { deleteCard, createCard, likeCard } from \"./components/card.js\";\r\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\r\nimport {\r\n  getUserInfo,\r\n  getCards,\r\n  updateUserProfile,\r\n  addNewCard,\r\n  updateUserAvatar,\r\n} from \"./components/api.js\";\r\n\r\nconst editPopup = document.querySelector(\".popup_type_edit\");\r\nconst addPopup = document.querySelector(\".popup_type_new-card\");\r\nconst imagePopup = document.querySelector(\".popup_type_image\");\r\nconst editProfileAvatarPopup = document.querySelector(\r\n  \".popup_type_avatar-edit\"\r\n);\r\n\r\nconst placesList = document.querySelector(\".places__list\");\r\nconst editButton = document.querySelector(\".profile__edit-button\");\r\nconst profileName = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\nconst addButton = document.querySelector(\".profile__add-button\");\r\nconst editProfileAvatarButton = document.querySelector(\".profile__image\");\r\n\r\nconst image = imagePopup.querySelector(\".popup__image\");\r\nconst caption = imagePopup.querySelector(\".popup__caption\");\r\n\r\nconst buttonClosePopupProfile = editPopup.querySelector(\".popup__close\");\r\nconst buttonClosePopupAdd = addPopup.querySelector(\".popup__close\");\r\nconst buttonClosePopupImage = imagePopup.querySelector(\".popup__close\");\r\nconst buttonClosePopupAvatar =\r\n  editProfileAvatarPopup.querySelector(\".popup__close\");\r\n\r\n// попап редактирование профиля\r\neditButton.addEventListener(\"click\", function () {\r\n  nameInput.value = profileName.textContent;\r\n  jobInput.value = profileDescription.textContent;\r\n  openPopup(editPopup);\r\n  clearValidation(editPopup, validationObj);\r\n});\r\nbuttonClosePopupProfile.addEventListener(\"click\", function () {\r\n  closePopup(editPopup);\r\n});\r\n\r\n// попап добавление новых карточек\r\naddButton.addEventListener(\"click\", function () {\r\n  openPopup(addPopup);\r\n  clearValidation(addPopup, validationObj);\r\n});\r\nbuttonClosePopupAdd.addEventListener(\"click\", function () {\r\n  closePopup(addPopup);\r\n});\r\n\r\n// попап смена аватарки\r\neditProfileAvatarButton.addEventListener(\"click\", function () {\r\n  openPopup(editProfileAvatarPopup);\r\n  clearValidation(editProfileAvatarPopup, validationObj);\r\n});\r\nbuttonClosePopupAvatar.addEventListener(\"click\", function () {\r\n  closePopup(editProfileAvatarPopup);\r\n});\r\n\r\n// открытие изображения карточки\r\nfunction openImage(cardData) {\r\n  // заполняем изображение и описание в модальном окне данными из карточки\r\n  image.src = cardData.link;\r\n  image.alt = cardData.name;\r\n  caption.textContent = cardData.name;\r\n  openPopup(imagePopup);\r\n}\r\nbuttonClosePopupImage.addEventListener(\"click\", function () {\r\n  closePopup(imagePopup);\r\n});\r\n\r\n// Редактирование имени и информации о себе\r\n// Находим форму в DOM\r\nconst formPopupEdit = document.querySelector(\".popup_type_edit\");\r\n// Находим поля формы в DOM\r\nconst nameInput = formPopupEdit.querySelector(\".popup__input_type_name\");\r\nconst jobInput = formPopupEdit.querySelector(\".popup__input_type_description\");\r\n\r\n// Объявляем переменную для хранения состояния загрузки\r\nlet isLoading = false;\r\n\r\nfunction handleSubmitProfileForm(evt) {\r\n  evt.preventDefault();\r\n  // Устанавливаем флаг isLoading в true, чтобы отобразить состояние загрузки\r\n  isLoading = true;\r\n  renderLoading(true);\r\n  // отмена стандартной отправки формы\r\n  const updatedProfileData = {\r\n    name: nameInput.value,\r\n    about: jobInput.value,\r\n  };\r\n  updateUserProfile(updatedProfileData)\r\n    .then((updatedData) => {\r\n      // обновляем текстовые элементы\r\n      profileName.textContent = updatedProfileData.name;\r\n      profileDescription.textContent = updatedProfileData.about;\r\n      closePopup(editPopup);\r\n      console.log(\"Данные профиля успешно обновлены:\", updatedData);\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"Ошибка при обновлении данных профиля:\", error);\r\n    })\r\n    .finally(() => {\r\n      // После завершения запроса с сервера сбрасываем флаг isLoading и обновляем состояние кнопки\r\n      isLoading = false;\r\n      renderLoading(false);\r\n    });\r\n}\r\n\r\n// Функция для отображения состояния загрузки\r\nfunction renderLoading(isLoading) {\r\n  const saveButton = editPopup.querySelector(\".popup__button\");\r\n  if (isLoading) {\r\n    saveButton.textContent = \"Сохранение...\";\r\n    saveButton.setAttribute(\"disabled\", true);\r\n  } else {\r\n    saveButton.textContent = \"Сохранить\";\r\n    saveButton.removeAttribute(\"disabled\");\r\n  }\r\n}\r\n\r\n// Прикрепляем обработчик к форме:\r\n// он будет следить за событием “submit” - «отправка»\r\nformPopupEdit.addEventListener(\"submit\", handleSubmitProfileForm);\r\n\r\n// добавление новой карточки\r\n// находим поля формы в DOM\r\nconst placeNameInput = addPopup.querySelector(\".popup__input_type_card-name\");\r\nconst linkInput = addPopup.querySelector(\".popup__input_type_url\");\r\n\r\n// обработчик отправки формы для добавления карточки\r\nfunction handleSubmitAddForm(evt) {\r\n  evt.preventDefault();\r\n  const placeNameValue = placeNameInput.value;\r\n  const linkValue = linkInput.value;\r\n  addNewCard(placeNameValue, linkValue)\r\n    .then((updatedData) => {\r\n      // создание новуй карточки и добавление её в начало\r\n      const newCard = createCard(\r\n        updatedData,\r\n        deleteCard,\r\n        openImage,\r\n        likeCard,\r\n        true\r\n      );\r\n      placesList.prepend(newCard);\r\n\r\n      // очищаем форму\r\n      placeNameInput.value = \"\";\r\n      linkInput.value = \"\";\r\n      closePopup(addPopup);\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"Ошибка при обновлении данных профиля:\", error);\r\n    });\r\n}\r\n\r\n// прикрепляем обработчик к форме добавления карточки\r\naddPopup.addEventListener(\"submit\", handleSubmitAddForm);\r\n\r\n////////////// VALIDATION ////////////////////\r\n\r\nconst validationObj = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\nenableValidation(validationObj);\r\n\r\nPromise.all([getUserInfo(), getCards()])\r\n  .then((results) => {\r\n    const [userData, cardsData] = results;\r\n    // Обновляем профиль пользователя\r\n    profileName.textContent = userData.name;\r\n    profileDescription.textContent = userData.about;\r\n    editProfileAvatarButton.style.backgroundImage = `url(${userData.avatar})`;\r\n\r\n    cardsData.forEach((cardData) => {\r\n      // Создание и добавление карточки на страницу\r\n      const isOwner = cardData.owner._id === userData._id;\r\n      const newCard = createCard(\r\n        cardData,\r\n        deleteCard,\r\n        openImage,\r\n        likeCard,\r\n        isOwner\r\n      );\r\n      placesList.appendChild(newCard);\r\n    });\r\n  })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  });\r\n\r\n// смена аватарки профиля\r\nfunction handleEditUserAvatar(evt) {\r\n  evt.preventDefault();\r\n  const avatarUrlInput = editProfileAvatarPopup.querySelector(\r\n    \".popup__input_type_edit-avatar\"\r\n  );\r\n  const avatarUrl = avatarUrlInput.form.link.value;\r\n  updateUserAvatar(avatarUrl)\r\n    .then((data) => {\r\n      // В случае успешного изменения аватара, обновляем его на странице и закрываем форму\r\n      editProfileAvatarButton.style.backgroundImage = `url(${data.avatar})`;\r\n      console.log(editProfileAvatarButton.style.backgroundImage);\r\n      closePopup(editProfileAvatarPopup);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Ошибка при обновлении аватара:\", error);\r\n    });\r\n}\r\n\r\neditProfileAvatarPopup.addEventListener(\"submit\", handleEditUserAvatar);"],"names":["openPopup","popupElement","classList","add","document","addEventListener","closeByEsc","closeByClickOverlay","closePopup","remove","removeEventListener","evt","key","querySelector","target","contains","config","baseUrl","headers","authorization","fetchData","url","fetch","then","response","ok","json","Promise","reject","status","catch","error","console","log","createCard","cardData","deleteCard","openImage","likeCard","isOwner","card","getElementById","content","cloneNode","cardImage","textContent","name","src","link","alt","likeCount","likes","length","cardId","_id","concat","method","style","display","likeButton","isLiked","toggleLike","updatedCardData","updateLikeCount","button","updateLikeButtonState","hideInputError","errorElement","inputElement","errorActiveClass","inputErrorClass","clearValidation","formElement","settingObj","inputList","Array","from","querySelectorAll","inputSelector","forEach","id","submitButton","submitButtonSelector","toggleButtonState","inactiveButtonClass","buttonElement","some","validity","valid","value","hasInvalidInput","disabled","editPopup","addPopup","imagePopup","editProfileAvatarPopup","placesList","editButton","profileName","profileDescription","addButton","editProfileAvatarButton","image","caption","buttonClosePopupProfile","buttonClosePopupAdd","buttonClosePopupImage","buttonClosePopupAvatar","nameInput","jobInput","validationObj","formPopupEdit","renderLoading","isLoading","saveButton","setAttribute","removeAttribute","preventDefault","updatedData","updatedProfileData","about","body","JSON","stringify","finally","placeNameInput","linkInput","newCard","prepend","formSelector","errorClass","validationMessage","showInputError","checkInputValidity","setEvtListeners","all","results","_results","userData","cardsData","backgroundImage","avatar","owner","appendChild","form","data"],"sourceRoot":""}